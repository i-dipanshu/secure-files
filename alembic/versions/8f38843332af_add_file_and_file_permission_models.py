"""Add file and file permission models

Revision ID: 8f38843332af
Revises: fd685cef1454
Create Date: 2025-06-09 13:24:33.944793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8f38843332af'
down_revision: Union[str, None] = 'fd685cef1454'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False, comment='Original filename uploaded by user'),
    sa.Column('display_name', sa.String(length=255), nullable=False, comment='Display name for the file (can be renamed)'),
    sa.Column('file_path', sa.String(length=500), nullable=False, comment='Path to file in storage (MinIO)'),
    sa.Column('file_size', sa.Integer(), nullable=False, comment='File size in bytes'),
    sa.Column('mime_type', sa.String(length=100), nullable=False, comment='MIME type of the file'),
    sa.Column('file_hash', sa.String(length=128), nullable=False, comment='SHA-256 hash of file content for integrity'),
    sa.Column('status', sa.Enum('UPLOADING', 'ACTIVE', 'DELETED', 'PROCESSING', name='filestatus'), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False, comment='Whether file is publicly accessible'),
    sa.Column('owner_id', sa.UUID(), nullable=False, comment='User who owns this file'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('accessed_at', sa.DateTime(timezone=True), nullable=True, comment='Last time file was accessed'),
    sa.Column('description', sa.Text(), nullable=True, comment='User-provided description'),
    sa.Column('tags', sa.Text(), nullable=True, comment='Comma-separated tags for organization'),
    sa.Column('download_count', sa.Integer(), nullable=False, comment='Number of times file has been downloaded'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='Number of times file has been viewed'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_index(op.f('ix_files_file_hash'), 'files', ['file_hash'], unique=False)
    op.create_index(op.f('ix_files_id'), 'files', ['id'], unique=False)
    op.create_index(op.f('ix_files_owner_id'), 'files', ['owner_id'], unique=False)
    op.create_index(op.f('ix_files_status'), 'files', ['status'], unique=False)
    op.create_table('file_permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('permission_type', sa.Enum('READ', 'WRITE', 'DELETE', 'SHARE', name='filepermissiontype'), nullable=False, comment='Type of permission granted'),
    sa.Column('granted_by', sa.UUID(), nullable=False, comment='User who granted this permission'),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True, comment='When this permission expires (NULL = never)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether this permission is currently active'),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_permissions_file_id'), 'file_permissions', ['file_id'], unique=False)
    op.create_index(op.f('ix_file_permissions_id'), 'file_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_file_permissions_user_id'), 'file_permissions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_file_permissions_user_id'), table_name='file_permissions')
    op.drop_index(op.f('ix_file_permissions_id'), table_name='file_permissions')
    op.drop_index(op.f('ix_file_permissions_file_id'), table_name='file_permissions')
    op.drop_table('file_permissions')
    op.drop_index(op.f('ix_files_status'), table_name='files')
    op.drop_index(op.f('ix_files_owner_id'), table_name='files')
    op.drop_index(op.f('ix_files_id'), table_name='files')
    op.drop_index(op.f('ix_files_file_hash'), table_name='files')
    op.drop_table('files')
    # ### end Alembic commands ###
